# Log Settings

#The bean 'jpaAuditingHandler', defined in null, could not be registered.
# A bean with that name has already been defined in null and overriding is disabled.
#spring.main.allow-bean-definition-overriding=true
# Therefore, database queries may be performed during view rendering.
# Explicitly configure spring.jpa.open-in-view to disable this warning
# spring.jpa.open-in-view is enabled by default.
spring.jpa.open-in-view = false
#server.error.include-stacktrace=never
server.error.include-message = always

# App Settings
apiPrefix = /v1
restPrefix = /rest

# Server Settings
# <code>http://localhost:8763/api-gateway-service</code>
#
spring.application.name = ${API_GATEWAY_SERVICE_NAME:api-gateway-service}
server.port = ${API_GATEWAY_SERVICE_PORT:8763}
server.servlet.contextPath = /api-gateway-service
#management.server.port = 8085
#management.server.address = 127.0.0.1
#
# Spring Chain Strategy Settings
#
# To use cache busting, the following configuration will configure a cache busting solution for all static
# resources, effectively adding a content hash in URLs,
# such as <link href="/css/spring-2a2d595e6ed9a0b24f027f2b63b134d6.css"/>:
spring.web.resources.chain.strategy.content.enabled = true
spring.web.resources.chain.strategy.content.paths = /**

# Add a spring.config.import=configserver: property to your configuration.
#  If configuration is not required add spring.config.import=optional:configserver: instead.
# To disable this check, set spring.cloud.config.enabled=false or
# spring.cloud.config.import-check.enabled=false.
# The Config Server needs to know which repository to manage
#The location in the import property has precedence over the uri property.
spring.config.import = optional:configserver:http://${CONFIG_SERVICE_HOST:localhost}:${config.service.port}/

# end point of load balancing server (registry service)
eureka.client.service-url.default-zone = ${REGISTRY_SERVICE_URL:http://${eureka.instance.hostname}:${registry.service.port}/eureka/}
